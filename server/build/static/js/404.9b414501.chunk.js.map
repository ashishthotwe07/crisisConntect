{"version":3,"file":"static/js/404.9b414501.chunk.js","mappings":"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","sources":["components/ChatBox.js","components/EmergencyCard.jsx","components/EmergencyList.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { IoCloseOutline } from \"react-icons/io5\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { chatSelector, createChat, fetchChats } from \"../redux/reducers/chatSlice\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io('http://localhost:3000');\r\n\r\nfunction ChatApp({ toggleChat, user }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { messages } = useSelector(chatSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchChats({ user }));\r\n  }, [messages]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      dispatch(createChat({ message: inputValue, user }));\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"newMessage\", (newMessage) => {\r\n      dispatch(createChat(newMessage));\r\n    });\r\n    return () => {\r\n      socket.off(\"newMessage\");\r\n    };\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <div className=\"fixed bottom-0 right-0 mb-4 mr-4\">\r\n      <div className=\"fixed bottom-16 right-4 w-96\">\r\n        <div className=\"bg-white shadow-md rounded-lg max-w-lg w-full\">\r\n          <div className=\"p-4 border-b bg-gray-500 text-white rounded-t-lg flex justify-between items-center\">\r\n            <p className=\"text-lg font-semibold\">{user}</p>\r\n            <button\r\n              className=\"text-gray-300 hover:text-gray-400 focus:outline-none focus:text-gray-400\"\r\n              onClick={toggleChat}\r\n            >\r\n              <IoCloseOutline className=\"text-xl\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"p-4 h-80 overflow-y-auto\">\r\n            {messages.length === 0 ? (\r\n              <div className=\"text-center text-gray-500 py-2\">\r\n                Start a conversation\r\n              </div>\r\n            ) : (\r\n              messages.map((message, index) => (\r\n                <div key={index} className={`mb-2 ${message.sender !== user ? \"text-right\" : \"\"}`}>\r\n                  <p className={`bg-${message.sender === user ? \"red\" : \"gray\"}-500 text-white rounded-lg py-2 px-4 inline-block`}>\r\n                    {message.message}\r\n                  </p>\r\n                  <p>{new Date(message.createdAt).toLocaleTimeString()}</p>\r\n                </div>\r\n              ))\r\n            )}  \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          <div className=\"p-4 border-t flex\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type a message\"\r\n              className=\"w-full px-3 py-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n            />\r\n            <button\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-r-md hover:bg-blue-600 transition duration-300\"\r\n              onClick={handleSendMessage}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatApp;\r\n","import React, { useState } from \"react\";\r\nimport { FaClock, FaMapMarkerAlt } from \"react-icons/fa\";\r\nimport ChatApp from \"./ChatBox\";\r\n\r\nconst EmergencyCard = ({ emergency }) => {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n\r\n  const toggleChat = () => {\r\n    setIsChatOpen(!isChatOpen);\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const secondsAgo = Math.floor(\r\n      (Date.now() - new Date(timestamp).getTime()) / 1000\r\n    );\r\n    if (secondsAgo < 60) {\r\n      return `${secondsAgo} second${secondsAgo !== 1 ? \"s\" : \"\"} ago`;\r\n    } else if (secondsAgo < 3600) {\r\n      const minutesAgo = Math.floor(secondsAgo / 60);\r\n      return `${minutesAgo} minute${minutesAgo !== 1 ? \"s\" : \"\"} ago`;\r\n    } else if (secondsAgo < 86400) {\r\n      const hoursAgo = Math.floor(secondsAgo / 3600);\r\n      return `${hoursAgo} hour${hoursAgo !== 1 ? \"s\" : \"\"} ago`;\r\n    } else {\r\n      const daysAgo = Math.floor(secondsAgo / 86400);\r\n      return `${daysAgo} day${daysAgo !== 1 ? \"s\" : \"\"} ago`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-sm bg-white border border-gray-200 rounded-lg shadow-md p-4\">\r\n      <img\r\n        className=\"cursor-pointer\"\r\n        src=\"https://images.unsplash.com/photo-1524661135-423995f22d0b?q=80&w=1000&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8bWFwfGVufDB8fDB8fHww\"\r\n        alt=\"\"\r\n      />\r\n      <div className=\"mt-4\">\r\n        <div className=\"\">\r\n          <h5 className=\"text-lg font-semibold text-gray-900\">\r\n            {emergency.type}\r\n          </h5>\r\n          <p className=\"text-sm font-semibold mt-5 text-gray-700\">\r\n            {emergency.details}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex justify-between mt-5\">\r\n          <p className=\"mt-1 text-sm text-gray-700 font-semibold w-40\">\r\n            <FaMapMarkerAlt className=\"inline \" /> {emergency.address}\r\n          </p>\r\n          <p className=\"mt-2 text-sm text-gray-700\">\r\n            <FaClock className=\"inline mr-2\" />\r\n            {formatDate(emergency.updatedAt)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-between mt-4\">\r\n        <a\r\n          href={`/emergency/details/${emergency._id}`}\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          Know More\r\n        </a>\r\n        <button\r\n          className=\"bg-gray-300 hover:bg-gray-400 text-gray-700 font-semibold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n          onClick={toggleChat}\r\n        >\r\n          Message\r\n        </button>\r\n      </div>\r\n\r\n      {isChatOpen && <ChatApp toggleChat={toggleChat} user={emergency.user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmergencyCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport EmergencyCard from \"./EmergencyCard\";\r\nimport { io } from \"socket.io-client\";\r\nimport { AuthSelector } from \"../redux/reducers/authSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EmergencyList = () => {\r\n  const [emergencyReports, setEmergencyReports] = useState([]);\r\n  const { user } = useSelector(AuthSelector);\r\n  const socket = io(\"http://localhost:3000\");\r\n\r\n  useEffect(() => {\r\n    fetchEmergencyReports();\r\n  }, []);\r\n\r\n  const fetchEmergencyReports = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n\r\n      const response = await fetch(\r\n        \"http://localhost:3000/api/emergency/reports\",\r\n        {\r\n          headers: headers,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch emergency reports\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      let filteredReports = data.data;\r\n\r\n      if (user) {\r\n        filteredReports = filteredReports.filter(\r\n          (report) => report.user !== user._id\r\n        );\r\n      }\r\n\r\n      setEmergencyReports(filteredReports);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const filteredReports = emergencyReports.filter(\r\n    (report) => report.status !== \"resolved\"\r\n  );\r\n\r\n  const resolvedReports = emergencyReports.filter(\r\n    (report) => report.status === \"resolved\"\r\n  );\r\n\r\n  filteredReports.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n\r\n  socket.on(\"newEmergencyReport\", (notification) => {\r\n    fetchEmergencyReports();\r\n  });\r\n\r\n  socket.on(\"updatedNotification\", (notification) => {\r\n    fetchEmergencyReports();\r\n  });\r\n  return (\r\n    <div className=\"w-2/3 m-auto\">\r\n      {filteredReports.length > 0 && (\r\n        <>\r\n          <h1 className=\"text-2xl font-bold text-center m-10 mb-4\">\r\n            Recent Emergency Reports\r\n          </h1>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {filteredReports.reverse().map((report) => (\r\n              <EmergencyCard key={report._id} emergency={report} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {resolvedReports.length > 0 && (\r\n        <div className=\"mt-8\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-center\">\r\n            Resolved Reports\r\n          </h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {resolvedReports.map((report) => (\r\n              <EmergencyCard key={report._id} emergency={report} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmergencyList;\r\n"],"names":["socket","io","_ref","toggleChat","user","inputValue","setInputValue","useState","messagesEndRef","useRef","dispatch","useDispatch","messages","useSelector","chatSelector","useEffect","fetchChats","current","scrollIntoView","behavior","on","newMessage","createChat","off","_jsx","className","children","_jsxs","onClick","IoCloseOutline","length","map","message","index","concat","sender","Date","createdAt","toLocaleTimeString","ref","type","placeholder","value","onChange","e","target","handleSendMessage","trim","emergency","isChatOpen","setIsChatOpen","src","alt","details","FaMapMarkerAlt","address","FaClock","timestamp","secondsAgo","Math","floor","now","getTime","minutesAgo","hoursAgo","daysAgo","formatDate","updatedAt","href","_id","ChatApp","EmergencyList","emergencyReports","setEmergencyReports","AuthSelector","fetchEmergencyReports","async","token","localStorage","getItem","headers","Authorization","response","fetch","ok","Error","filteredReports","json","data","filter","report","error","toast","status","resolvedReports","sort","a","b","notification","_Fragment","reverse","EmergencyCard"],"sourceRoot":""}